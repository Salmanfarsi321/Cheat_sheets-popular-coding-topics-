-------------------------------------------------------------------------Segment tree------------------------------------------------------------------------------

Que1:count multiples of 5

There are N numbers a[0], a[1]..a[N - 1]. The task is to answer some queries. 
Each query will be of the form {L,R}, where you have to count how many numbers between indices L and R(inclusive) are divisible by 5.

#include<bits/stdc++.h>
using namespace std;

const int N=1e5;
vector<int>a(N);
vector<int>seg(4*N);

void build(int ind,int low,int high){
    if(low==high){
        seg[ind]=a[low]%5==0 ? 1:0;
        return;
    }
    int mid=(low+high)/2;
    build(2*ind+1,low,mid);
    build(2*ind+2,mid+1,high);
    seg[ind]=seg[2*ind+1]+seg[2*ind+2];
}

int query(int ind,int low,int high,int l,int r){
    if(l<=low && high<=r) return seg[ind];
    if(high<l || low>r) return 0;
    int mid=(low+high)/2;
    int right=query(2*ind+1,low,mid,l,r);
    int left=query(2*ind+2,mid+1,high,l,r);
    return left+right;
}

int main()
{
	int t;
	cin>>t;
	while(t--){
	    int n,q;
	    cin>>n>>q;
	    for(int i=0;i<n;i++) cin>>a[i];
	    build(0,0,n-1);
	    while(q--){
	        int l,r;
	        cin>>l>>r;
	        l--,r--;
	        cout<<query(0,0,n-1,l,r)<<" ";
	    }
	    cout<<"\n";
	}
	return 0;
}

Que2:

